# bot.py ‚Äî —Ñ–æ–Ω–æ–≤—ã–π –≤–æ—Ä–∫–µ—Ä: –¥–≤–∞ –æ—Ç—á—ë—Ç–∞ –≤ –¥–µ–Ω—å (07:00, 19:00)
import time
from datetime import datetime, timedelta
import telebot

from scraper import fetch_listings
from config import TELEGRAM_TOKEN, CHAT_ID, TZ, SCHEDULE_TIMES

bot = telebot.TeleBot(TELEGRAM_TOKEN, parse_mode="HTML")
seen = set()  # –ø—Ä–æ—Å—Ç–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–µ–π –∑–∞ —Ç–µ–∫—É—â–∏–π –∑–∞–ø—É—Å–∫

def next_run_after(now):
    """–í–µ—Ä–Ω—ë—Ç datetime –±–ª–∏–∂–∞–π—à–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–æ–≥–ª–∞—Å–Ω–æ SCHEDULE_TIMES –≤ TZ."""
    today = now.date()
    times_today = []
    for t in SCHEDULE_TIMES:
        h, m = map(int, t.split(":"))
        dt = datetime(now.year, now.month, now.day, h, m, tzinfo=TZ)
        times_today.append(dt)
    later = [dt for dt in times_today if dt > now]
    if later:
        return min(later)
    # –∏–Ω–∞—á–µ ‚Äî –ø–µ—Ä–≤—ã–π —Å–ª–æ—Ç –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è
    h, m = map(int, SCHEDULE_TIMES[0].split(":"))
    return datetime(now.year, now.month, now.day, h, m, tzinfo=TZ) + timedelta(days=1)

def notify():
    ads = fetch_listings()
    new_lines, new_count = [], 0
    for ad in ads:
        key = ad.get("link") or ad.get("title")
        if key and key not in seen:
            seen.add(key)
            new_count += 1
            t = ad.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
            l = ad.get("link", "")
            if l:
                new_lines.append(f"‚Ä¢ <a href=\"{l}\">{t}</a>")
            else:
                new_lines.append(f"‚Ä¢ {t}")
    now_str = datetime.now(TZ).strftime("%Y-%m-%d %H:%M")
    if new_count:
        text = f"üìù –û—Ç—á—ë—Ç {now_str}. –ù–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {new_count}\n" + "\n".join(new_lines[:30])
    else:
        text = f"üìù –û—Ç—á—ë—Ç {now_str}. –ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç (–Ω–∞—à—ë–ª –≤—Å–µ–≥–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(ads)})."
    bot.send_message(CHAT_ID, text, disable_web_page_preview=True)

if __name__ == "__main__":
    print("Worker started")
    while True:
        now = datetime.now(TZ)
        nxt = next_run_after(now)
        wait = max(1, int((nxt - now).total_seconds()))
        print(f"–°–µ–π—á–∞—Å {now}, —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ {nxt}, —Å–ø–ª—é {wait} —Å–µ–∫")
        time.sleep(wait)
        try:
            notify()
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –≤ notify:", e)
            try:
                bot.send_message(CHAT_ID, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")
            except Exception:
                pass
            time.sleep(5)
